name: CI
on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      - name: Install
        run: |
          python -m pip install --upgrade pip
          pip install -e .[dev]
      - name: Ruff Lint
        run: ruff check .
      - name: Mypy Type Check
        run: mypy oscillink
      - name: Pytest
        run: pytest -q --cov=oscillink --cov-report=xml --cov-report=term
      - name: Export OpenAPI schema
        run: python -m scripts.export_openapi --out openapi.json
      - name: Fetch base branch OpenAPI schema (best-effort)
        if: github.event_name == 'pull_request'
        run: |
          set -e
          # Attempt to download previous schema artifact from base branch latest workflow run
          echo "Attempting to fetch previous OpenAPI schema artifact (best-effort)"
          echo "Not implemented: requires additional permissions or artifact retention strategy"
          echo "Skipping fetch; using current schema as prev fallback" 
          cp openapi.json prev_openapi.json
      - name: OpenAPI breaking change check
        if: github.event_name == 'pull_request'
        run: |
          python -m scripts.check_openapi_diff_simple --prev prev_openapi.json --current openapi.json || (echo "OpenAPI diff check failed" && exit 1)
      - name: Upload OpenAPI schema artifact
        uses: actions/upload-artifact@v4
        with:
          name: openapi-schema
          path: openapi.json
      - name: Upload coverage xml
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml
      - name: Upload to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: coverage.xml
          flags: unittests
          fail_ci_if_error: false
          verbose: true
      - name: Performance Check
        run: |
          python scripts/perf_check.py --baseline scripts/perf_baseline.json --N 400 --D 64 --kneighbors 6 --trials 2 || echo "Perf check failed (non-blocking)"
  perf-smoke:
    runs-on: ubuntu-latest
    needs: test
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v6
        with:
          python-version: '3.11'
      - name: Install minimal
        run: |
          python -m pip install --upgrade pip
          pip install -e .[cloud]
      - name: Perf smoke test
        run: pytest -q tests/test_perf_smoke.py
